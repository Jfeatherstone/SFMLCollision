{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Times New Roman;}{\f4\fswiss\fprq2\fcharset0 Arial;}{\f5\froman\fprq2\fcharset0 Arial;}{\f6\froman\fprq2\fcharset0 Courier New;}{\f7\fnil\fprq2\fcharset0 Verdana;}{\f8\fnil\fprq2\fcharset0 Courier New;}{\f9\fnil\fprq2\fcharset0 Noto Sans Devanagari;}{\f10\fswiss\fprq0\fcharset128 Noto Sans Devanagari;}{\f11\fnil\fprq2\fcharset0 Symbol;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033 Normal;}
{\s1\sbasedon0\snext1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36 Heading 1;}
{\s2\sbasedon0\snext2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28 Heading 2;}
{\s3\sbasedon0\snext3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20 Heading 3;}
{\s4\sbasedon0\snext4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20 Heading 4;}
{\s5\sbasedon0\snext5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20 Heading 5;}
{\*\cs15\snext15 Default Paragraph Font;}
{\s16\sbasedon0\snext17\widctlpar\sb240\sa120\keepn\dbch\af7\dbch\af9\afs28\loch\f4\fs28 Heading;}
{\s17\sbasedon0\snext17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22 Text Body;}
{\s18\sbasedon17\snext18\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af10\afs24\loch\f3\fs22 List;}
{\s19\sbasedon0\snext19\widctlpar\sb120\sa120\noline\i\dbch\af8\dbch\af10\afs24\ai\loch\f3\fs24 Caption;}
{\s20\sbasedon0\snext20\widctlpar\noline\dbch\af8\dbch\af10\afs24\loch\f3\fs20 Index;}
{\s21\sbasedon0\snext21\qc\widctlpar\sb240\sa60\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs32 Title;}
{\s22\sbasedon0\snext22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20 Subtitle;}
{\s23\sbasedon0\snext23\widctlpar\dbch\af8\dbch\af11\afs24\loch\f3\fs22 DenseText;}
{\s24\sbasedon0\snext24\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20 Header;}
{\s25\sbasedon0\snext25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20 Footer;}
{\s26\sbasedon0\snext26\widctlpar\li360\ri0\lin360\rin0\fi0\sb120\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20 GroupHeader;}
{\s27\sbasedon0\snext27\widctlpar\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 0;}
{\s28\sbasedon0\snext28\widctlpar\li360\ri0\lin360\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 1;}
{\s29\sbasedon0\snext29\widctlpar\li720\ri0\lin720\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 2;}
{\s30\sbasedon0\snext30\widctlpar\li1080\ri0\lin1080\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 3;}
{\s31\sbasedon0\snext31\widctlpar\li1440\ri0\lin1440\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 4;}
{\s32\sbasedon0\snext32\widctlpar\li1800\ri0\lin1800\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 5;}
{\s33\sbasedon0\snext33\widctlpar\li2160\ri0\lin2160\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 6;}
{\s34\sbasedon0\snext34\widctlpar\li2520\ri0\lin2520\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 7;}
{\s35\sbasedon0\snext35\widctlpar\li2880\ri0\lin2880\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 8;}
{\s36\sbasedon0\snext36\widctlpar\li3240\ri0\lin3240\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 9;}
{\s37\sbasedon0\snext37\widctlpar\li3600\ri0\lin3600\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 10;}
{\s38\sbasedon0\snext38\widctlpar\li3960\ri0\lin3960\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 11;}
{\s39\sbasedon0\snext39\widctlpar\li4320\ri0\lin4320\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 12;}
{\s40\sbasedon0\snext40\widctlpar\li4680\ri0\lin4680\rin0\fi0\cbpat8\dbch\af8\dbch\af11\afs24\loch\f6\fs16 Code Example 13;}
{\s41\sbasedon0\snext41\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 0;}
{\s42\sbasedon0\snext42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 1;}
{\s43\sbasedon0\snext43\qj\widctlpar\li720\ri0\lin720\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 2;}
{\s44\sbasedon0\snext44\qj\widctlpar\li1080\ri0\lin1080\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 3;}
{\s45\sbasedon0\snext45\qj\widctlpar\li1440\ri0\lin1440\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 4;}
{\s46\sbasedon0\snext46\qj\widctlpar\li1800\ri0\lin1800\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 5;}
{\s47\sbasedon0\snext47\qj\widctlpar\li2160\ri0\lin2160\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 6;}
{\s48\sbasedon0\snext48\qj\widctlpar\li2520\ri0\lin2520\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 7;}
{\s49\sbasedon0\snext49\qj\widctlpar\li2880\ri0\lin2880\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 8;}
{\s50\sbasedon0\snext50\qj\widctlpar\li3240\ri0\lin3240\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 9;}
{\s51\sbasedon0\snext51\qj\widctlpar\li3600\ri0\lin3600\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 10;}
{\s52\sbasedon0\snext52\qj\widctlpar\li3960\ri0\lin3960\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 11;}
{\s53\sbasedon0\snext53\qj\widctlpar\li4320\ri0\lin4320\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 12;}
{\s54\sbasedon0\snext54\qj\widctlpar\li4680\ri0\lin4680\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Continue 13;}
{\s55\sbasedon0\snext55\ql\widctlpar\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 0;}
{\s56\sbasedon0\snext56\ql\widctlpar\li360\ri0\lin360\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 1;}
{\s57\sbasedon0\snext57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 2;}
{\s58\sbasedon0\snext58\ql\widctlpar\li1080\ri0\lin1080\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 3;}
{\s59\sbasedon0\snext59\ql\widctlpar\li1440\ri0\lin1440\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 4;}
{\s60\sbasedon0\snext60\ql\widctlpar\li1800\ri0\lin1800\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 5;}
{\s61\sbasedon0\snext61\ql\widctlpar\li2160\ri0\lin2160\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 6;}
{\s62\sbasedon0\snext62\ql\widctlpar\li2520\ri0\lin2520\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 7;}
{\s63\sbasedon0\snext63\ql\widctlpar\li2880\ri0\lin2880\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 8;}
{\s64\sbasedon0\snext64\ql\widctlpar\li3240\ri0\lin3240\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 9;}
{\s65\sbasedon0\snext65\ql\widctlpar\li3600\ri0\lin3600\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 10;}
{\s66\sbasedon0\snext66\ql\widctlpar\li3960\ri0\lin3960\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 11;}
{\s67\sbasedon0\snext67\ql\widctlpar\li4320\ri0\lin4320\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 12;}
{\s68\sbasedon0\snext68\ql\widctlpar\li4680\ri0\lin4680\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20 DescContinue 13;}
{\s69\sbasedon0\snext69\widctlpar\tldot\tqr\tx8640\sb30\sa30\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 0;}
{\s70\sbasedon0\snext70\widctlpar\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\sb27\sa27\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 1;}
{\s71\sbasedon0\snext71\widctlpar\tldot\tqr\tx8640\li720\ri0\lin720\rin0\fi0\sb24\sa24\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 2;}
{\s72\sbasedon0\snext72\widctlpar\tldot\tqr\tx8640\li1080\ri0\lin1080\rin0\fi0\sb21\sa21\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 3;}
{\s73\sbasedon0\snext73\widctlpar\tldot\tqr\tx8640\li1440\ri0\lin1440\rin0\fi0\sb18\sa18\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 4;}
{\s74\sbasedon0\snext74\widctlpar\tldot\tqr\tx8640\li1800\ri0\lin1800\rin0\fi0\sb15\sa15\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 5;}
{\s75\sbasedon0\snext75\widctlpar\tldot\tqr\tx8640\li2160\ri0\lin2160\rin0\fi0\sb12\sa12\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 6;}
{\s76\sbasedon0\snext76\widctlpar\tldot\tqr\tx8640\li2520\ri0\lin2520\rin0\fi0\sb9\sa9\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 7;}
{\s77\sbasedon0\snext77\widctlpar\tldot\tqr\tx8640\li2880\ri0\lin2880\rin0\fi0\sb6\sa6\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 8;}
{\s78\sbasedon0\snext78\widctlpar\tldot\tqr\tx8640\li3240\ri0\lin3240\rin0\fi0\sb3\sa3\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 9;}
{\s79\sbasedon0\snext79\widctlpar\tldot\tqr\tx8640\li3600\ri0\lin3600\rin0\fi0\sb3\sa3\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 10;}
{\s80\sbasedon0\snext80\widctlpar\tldot\tqr\tx8640\li3960\ri0\lin3960\rin0\fi0\sb3\sa3\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 11;}
{\s81\sbasedon0\snext81\widctlpar\tldot\tqr\tx8640\li4320\ri0\lin4320\rin0\fi0\sb3\sa3\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 12;}
{\s82\sbasedon0\snext82\widctlpar\tldot\tqr\tx8640\li4680\ri0\lin4680\rin0\fi0\sb3\sa3\dbch\af8\dbch\af11\afs24\loch\f3\fs20 LatexTOC 13;}
{\s83\sbasedon0\snext83\sautoupd\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 0;}
{\s84\sbasedon0\snext84\sautoupd\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 1;}
{\s85\sbasedon0\snext85\sautoupd\widctlpar\tx1080\li1080\ri0\lin1080\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 2;}
{\s86\sbasedon0\snext86\sautoupd\widctlpar\tx1440\li1440\ri0\lin1440\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 3;}
{\s87\sbasedon0\snext87\sautoupd\widctlpar\tx1800\li1800\ri0\lin1800\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 4;}
{\s88\sbasedon0\snext88\sautoupd\widctlpar\tx2160\li2160\ri0\lin2160\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 5;}
{\s89\sbasedon0\snext89\sautoupd\widctlpar\tx2520\li2520\ri0\lin2520\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 6;}
{\s90\sbasedon0\snext90\sautoupd\widctlpar\tx2880\li2880\ri0\lin2880\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 7;}
{\s91\sbasedon0\snext91\sautoupd\widctlpar\tx3240\li3240\ri0\lin3240\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 8;}
{\s92\sbasedon0\snext92\sautoupd\widctlpar\tx3600\li3600\ri0\lin3600\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 9;}
{\s93\sbasedon0\snext93\sautoupd\widctlpar\tx3960\li3960\ri0\lin3960\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 10;}
{\s94\sbasedon0\snext94\sautoupd\widctlpar\tx4320\li4320\ri0\lin4320\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 11;}
{\s95\sbasedon0\snext95\sautoupd\widctlpar\tx4680\li4680\ri0\lin4680\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 12;}
{\s96\sbasedon0\snext96\sautoupd\widctlpar\tx5040\li5040\ri0\lin5040\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Bullet 13;}
{\s97\sbasedon0\snext97\sautoupd\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 0;}
{\s98\sbasedon0\snext98\sautoupd\widctlpar\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 1;}
{\s99\sbasedon0\snext99\sautoupd\widctlpar\li1080\ri0\lin1080\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 2;}
{\s100\sbasedon0\snext100\sautoupd\widctlpar\li1440\ri0\lin1440\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 3;}
{\s101\sbasedon0\snext101\sautoupd\widctlpar\li1800\ri0\lin1800\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 4;}
{\s102\sbasedon0\snext102\sautoupd\widctlpar\li2160\ri0\lin2160\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 5;}
{\s103\sbasedon0\snext103\sautoupd\widctlpar\li2520\ri0\lin2520\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 6;}
{\s104\sbasedon0\snext104\sautoupd\widctlpar\li2880\ri0\lin2880\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 7;}
{\s105\sbasedon0\snext105\sautoupd\widctlpar\li3240\ri0\lin3240\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 8;}
{\s106\sbasedon0\snext106\sautoupd\widctlpar\li3600\ri0\lin3600\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 9;}
{\s107\sbasedon0\snext107\sautoupd\widctlpar\li3960\ri0\lin3960\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 10;}
{\s108\sbasedon0\snext108\sautoupd\widctlpar\li4320\ri0\lin4320\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 11;}
{\s109\sbasedon0\snext109\sautoupd\widctlpar\li4680\ri0\lin4680\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 12;}
{\s110\sbasedon0\snext110\sautoupd\widctlpar\li5040\ri0\lin5040\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20 List Enum 13;}
}{\*\generator LibreOffice/6.2.1.2$Linux_X86_64 LibreOffice_project/20$Build-2}{\info{\title SFMLCollision}{\creatim\yr2019\mo3\dy26\hr10\min11}{\revtim\yr2019\mo3\dy26\hr10\min12}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab720
\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt iii}}}
\par }\pgdscnxt0 Default Style;}
{\pgdsc1\pgdscuse451\pgnlcrm\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 1}}}
\par }\pgdscnxt1 Converted1;}
{\pgdsc2\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt }}}
\par }\pgdscnxt2 Converted2;}
{\pgdsc3\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 4}}}
\par }\pgdscnxt3 Converted3;}
{\pgdsc4\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 5}}}
\par }\pgdscnxt4 Converted4;}
{\pgdsc5\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 6}}}
\par }\pgdscnxt5 Converted5;}
{\pgdsc6\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 11}}}
\par }\pgdscnxt6 Converted6;}
{\pgdsc7\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 25}}}
\par }\pgdscnxt7 Converted7;}
{\pgdsc8\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 28}}}
\par }\pgdscnxt8 Converted8;}
{\pgdsc9\pgdscuse451\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 29}}}
\par }\pgdscnxt9 Converted9;}}
\formshade{\*\pgdscno0}\paperh16838\paperw11906\margl1800\margr1800\margt1440\margb720\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20\qr\widctlpar\tqc\tx4320\tqr\tx8640{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt iii}}}
\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgnlcrm\pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s21\qc\widctlpar\sb240\sa60\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs32{\rtlch \ltrch
{\field{\*\fldinst  TITLE }{\fldrslt SFMLCollision}}}
\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Jack Featherstone}
\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Version }
\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
03/26/2019}
\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \pard\plain \s22\qc\widctlpar\sb0\sa60\dbch\af8\dbch\af11\afs24\loch\f5\fs20\pagebb\rtlch \ltrch\loch

\par \pard\plain \s1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36\pagebb{\rtlch \ltrch\loch
Table of Contents}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\widctlpar{\dbch\af8\dbch\af11\afs24\rtlch \ltrch\loch\fs20
Table of contents}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\rtlch \ltrch\loch

\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\ltrsect\sbknone\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\rtlch \ltrch\loch

\par \pard\plain \s1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36{\rtlch \ltrch\loch
SFML Collision}{\rtlch \ltrch\loch
}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\*\bkmkstart AAAAAAAACZ}{\*\bkmkend AAAAAAAACZ}{\*\bkmkstart AAAAAAAACZ}{\*\bkmkend AAAAAAAACZ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
This project is an extension of a previous repo (}{\rtlch \ltrch\loch\loch\f6\hich\af6
SFMLHitbox}{\rtlch \ltrch\loch
) where the goal is to create an easily implemented object that allows for accurate hitbox detection on both convex and concave shapes. By default, SFML only has a ConvexShape, for which there is no intersects function.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The user will be able to create a }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape in two different ways:}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\rtlch \ltrch\loch

\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
1.\tab By providing a texture to the constructor which will identify important pixels to be included as verticies and create the shape based on these. This will also allow for the user to define the level of accuracy as either pixel perfect or approximate.}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
2.\tab By proving a vector of pre assembled verticies, possibly from some other SFML class by using the getPoints() method.}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
3.\tab By directly passing in any of the SFML shape objects (CircleShape, RectangleShape, ConvexShape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
it can do so far:}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\rtlch \ltrch\loch

\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
1.\tab Create a set of verticies from an image file with a varying level of detail to optimize the number of verticies (given by the user)}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
2.\tab Draw the object and use common SFML transformations (rotate, scale, move)}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
3.\tab Detect intersection between }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 type and any other SFML shape regardless of concavity (without providing resultant vector)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
it can't do (that I am working on):}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\rtlch \ltrch\loch

\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
1.\tab Detecting whether one shape is inside of another}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
2.\tab Finding the resultant vector when two polygons collide}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
3.\tab Optimize vertex reduction for objects even more}
\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
4.\tab Not have a 700 line constructor for image files (working on refactoring)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\rtlch \ltrch\loch

\par \pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
There are several aspects to how this library will work, many of which are complicated and so will be overviewed below. This information is not necessary to use the tool, but can be helpful to understand what is going on (especially if you want to contribute to the code).}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
For information on practical usage of the tool, see the documentation page, which has yet to be created.}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
This isn't so much mathematical as it is programmatic. This section of code can be found in the polygon constructor that takes in a texture, a level of detail, and an optional list of colors.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Note: the notation for images below is as follows}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
0 denotes empty space (will not be included)}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
1 denotes a vertex that will be included}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
2 denotes the inside of a shape that will not be included}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
3 denotes a vertex that was included, but no longer will be as it is not necessary}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
following images are generated from this source image:}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The first operation that is performed isolates the important colors in the image. We divide the image into a vertex of colors and then decide whether or not we would like to include a given pixel in the polygon. By default, any color that isn't (0, 0, 0, 0) will be included, but if a list of ignored colors is provided, anything on that list will be excluded as well.   }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Now that we have a vertex of 1s representing parts to be included and 0s that represent empty space, we begin removing excess points. The most obvious part to remove here is the inside of the shape. To properly represent our image, we really only need to identify the outline, so we remove anything that isn't accessible to an outside shape. In this stage, we also fill in any inside details such that they are removed. This is done by drawing eight lines in all of the cardinal directions and diagonals, and seeing if they encounter a point that is included. If all eight do, the point must be inside the outline of the object. This can be seen in Images/test6.png and Images/test7.png which will produce the exact same polygon.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The next group of verticies to be removed are those that are in a straight line, of which we really only need to two endpoints of said line. This is really just checking above and below and left and right of a point and removing the intermediate verticies.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The next step of identify verticies is very similar to the previous one, but instead works with diagonal lines.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Finally, we remove any intermediate points along the horizontals, similar to what we did earlier with verticle and horizontal lines.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
These steps remove just about all of the excess verticies we have, and provide a rather good, just-about pixel-perfect representation of our texture.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The next step is arguably the hardest, and involves adding our verticies in the proper order. This seems like it should be an easy step, just iterate through our vector and add any points that have a value of 1, but alas. If we were to do this, the order of our verticies would be incorrect, and shape would zig-zag back and forth, and be a terrible representation of the actual shape. Instead, we have to follow one direction, clockwise or counter-clockwise, consistently, which is easier said than done.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
One of the saving graces of this process is that due to our vertex reduction, just about every vertex should only be connected to either one two verticies (1), or a place that used to be a vertex (3). The case where this is not true is exmplified in the last image above, where at the top of the shape we have a 2x2 square of all verticies.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
We can then keep track of which places (1s or 3s) we have visited, so we don't repeat any values, and each location will only have one other location to go to.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
We begin the process by starting at (0, 0) and moving horizontally until we encounter the first pixel marked as a '1'. Once we have this value, we add it to our list of final points, and check the adjacent pixels for either 1s or 3s. The order we check in is clockwise, beginning from the top and ending at the top left.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Depending on whether or not we find a 3 or a 1 changes the next step slightly. In either case, we will move to that pixel and repeat the process of searching adjacent pixels, but will only add the coordinate to our final vector if the value is a 1.}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
One of the options that is presented to the user is the level of detail in which to model the texture. There are currently three different levels: Less, More, Optimal. Each of these values represents a percent difference the final polygon is allowed to be from the initial one. No matter the level of detail, the previous conversion is always the same, and this trimming is only done afterwards.}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Essentially, we iterate through every points on the shape and find the difference in area if we were to remove it. If we find that the difference is below a certain value, which is based on the level of detail (Less - 15%, More, 7.5%, Optimal - 1%), we actually remove that point and continue. This allows for us to remove insignificant points systematically.}
\par \pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Since our polygon intersection method is based on the lines that surround each shape, one of the most important parts of intersection is to properly be able to address line intersections. The method we use can be seen in (1), but can be summarized as follows: we take ratios of the start and end coordinates of each of the two lines to calculate the percent along each line where they intersect. If these two percents are between 0 and 1, it means that they properly intersect within the domain of both lines, and actually do intersect. This allows to to not only find whether two line segments intersect on their given domain, but also allows us to find the intersection point quite easily. Another benefit of using this method is that if we want to extend a line segment to a full line (which will be useful in finding whether one shape is inside another), we can easily do this by only checking one of the percent values, and ignoring the other.}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Before we get to the main intersection method described below, we want to do a simpler test to determine if collision between the two objects is possible. We do this by using SFML's built in FloatRect intersection method, using the absolute bounds of the shape. This means that we use the getGlobalBounds() method for each shape to find whether any of the lines could possibly overlap. This should be taken into account when looking at benchmarks between our total collision method vs. the built in one in SFML, as ours uses the latter.}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The main way we detect collisions between two polygons is by taking the vector of lines contained within each polygon class, and iterating through every line with every other line. This may seem to be a rather inefficient method, but since our line intersection method is so simple, the O(n^2) complexity doesn't spiral out of control. Since we also optimize the number of verticies, we rarely have a shape with more than 50 lines, normally we have between 10 and 20. In the future, I would like to optimize this somehow, but as of now, it works and there are more pressing issues to deal with}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Not quite sure how to do this just yet, but so far my thoughts are as follows. If we can take the point of intersection for each line (which we can easily find) along with the vertex end of the segment that is inside of the shape (this is the harder part). We can take the vector between these two, as a resultant, and average it with any other resultant vectors, and place them at the average of the verticies found inside the other shape. This is a highly theoretical process and I and have no way to test it as of now, but hopefully a more concrete solution (either this or another one) will stick.}
\par \pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch
}{\rtlch \ltrch
 }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\rtlch \ltrch\loch

\par \pard\plain \s97\widctlpar\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
1.\tab }{\rtlch \ltrch\loch\loch\f6\hich\af6
Parametric line intersection method}{\rtlch \ltrch\loch
 }
\par \qr\widctlpar\tqc\tx4320\tqr\tx8640\pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\rtlch \ltrch\loch

\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\pgndec\sbkpage\footery1440{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 5}}}
\par }\pard\plain \s1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36{\rtlch \ltrch\loch
Hierarchical Index}
\par \pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch
}{\rtlch \ltrch\loch
Class Hierarchy}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
This inheritance list is sorted roughly, but not completely, alphabetically:}
\par \pard\plain \s70\widctlpar\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\sb27\sa27\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Line\tab }{\rtlch \ltrch\loch
{\field{\*\fldinst  PAGEREF AAAAAAAAAA \\h }{\fldrslt 7}}}
\par \pard\plain \s70\widctlpar\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\sb27\sa27\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Shape}
\par \pard\plain \s71\widctlpar\tldot\tqr\tx8640\li720\ri0\lin720\rin0\fi0\sb24\sa24\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tldot\tqr\tx8640\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Polygon\tab }{\rtlch \ltrch\loch
{\field{\*\fldinst  PAGEREF AAAAAAAAAP \\h }{\fldrslt 12}}}
\par \pard\plain \s70\widctlpar\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\sb27\sa27\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \qr\widctlpar\tqc\tx4320\tqr\tx8640\pard\plain \s70\widctlpar\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\sb27\sa27\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
VectorMath\tab }{\rtlch \ltrch\loch
{\field{\*\fldinst  PAGEREF AAAAAAAACP \\h }{\fldrslt 26}}}
\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\pgndec\sbkpage\footery1440{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 6}}}
\par }\pard\plain \s1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36{\rtlch \ltrch\loch
Class Index}
\par \pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch
}{\rtlch \ltrch\loch
Class List}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Here are the classes, structs, unions and interfaces with brief descriptions:}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0{\b\rtlch \ltrch\loch
Line (The line class is integral to detecting collisions between polygon classes, and thus is used internalling in the intersection method, and Polygon objects. A note about these is that the name is a slight misnomer, in that by default, the lines are actually line segments, having a finite length and a start and end point )}{\rtlch \ltrch\loch
 \tab }{\rtlch \ltrch\loch
{\field{\*\fldinst  PAGEREF AAAAAAAAAA \\h }{\fldrslt 7}}}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0{\b\rtlch \ltrch\loch
Polygon (The polygon object is the most important aspect of our collisions class, and accounts for most of what will likely be used externally. Polygons can be created through either a texture, a vector of points, or any other child class of sf::Shape (CircleShape, RectangleShape, etc.). Polygon objects act very similarly to the other sf::Shape classes, being able to be drawn by a RenderWindow and are able to be transformed by any method from sf::Transformable. On top of these stock attributes, Polygons are also able to be either convex or concave (unlike convexshape) and have a method to detect collision between two instances of the class, or between the class and any other sf::Shape class. With this ability comes a few more paramters that can be changed about the shape, including the density, rigidity, moment of inertia, etc. that all affect how a shape reacts to colliding with another shape )}{\rtlch \ltrch\loch
 \tab }{\rtlch \ltrch\loch
{\field{\*\fldinst  PAGEREF AAAAAAAAAP \\h }{\fldrslt 12}}}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0{\b\rtlch \ltrch\loch
VectorMath (This class contains several different mathematical operations and calculations used to apply transformations, find dot/cross products, and several other use cases. All methods defined in this class are static (and any new additions should follow suit), though there is no other connection between the functions. Also, not all functions use vectors, as the name might suggest, but rather that they have to deal with directionality )}{\rtlch \ltrch\loch
 \tab }{\rtlch \ltrch\loch
{\field{\*\fldinst  PAGEREF AAAAAAAACP \\h }{\fldrslt 26}}}
\par \qr\widctlpar\tqc\tx4320\tqr\tx8640\pard\plain \s70\widctlpar\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\sb27\sa27\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tldot\tqr\tx8640\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\pgndec\sbkpage\footery1440{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 11}}}
\par }\pard\plain \s1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36{\rtlch \ltrch\loch
Class Documentation}{\rtlch \ltrch\loch
}
\par \pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch\loch
Line Class Reference}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch
}{\rtlch \ltrch{\*\bkmkstart AAAAAAAAAA}{\*\bkmkend AAAAAAAAAA}
}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The line class is integral to detecting collisions between polygon classes, and thus is used internalling in the intersection method, and }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 objects. A note about these is that the name is a slight misnomer, in that by default, the lines are actually line segments, having a finite length and a start and end point. }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch\loch\loch\f6\hich\af6
#include <Line.hpp>}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Public Member Functions}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 (Vector2f p1, Vector2f p2)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Line}{\i\rtlch \ltrch\loch
 object from two endpoints. They don't necessarily have to be in order of higher/lower x or y. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Line}{\i\rtlch \ltrch\loch
 object with no information, using for comparing lines to see if they exist. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
y}{\rtlch \ltrch\loch
 (float x)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Find the y value at any given x on the line (doesn't deal with endpoints/domain) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (}{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 line)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Wrapper for our more involved intersection method that doesn't deal with any other parameters but the line. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (}{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 line, Vector2f &intersectionPoint, bool extendLine=false)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Check to see if two lines intersect within their domain (between the endpoints) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getAngle}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the angle the line makes with the horizontal x axis. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getIntercept}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the intercept, or when the line crosses the y axis. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getSlope}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the slope, or rise over run, of the line. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
Vector2f }{\b\rtlch \ltrch\loch
getStart}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the first point used in the creation of the line object. Does not necessarily need to be before (in either x or y) the second point. Returned point does have any offset effects applied to it. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
Vector2f }{\b\rtlch \ltrch\loch
getEnd}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the second point used in the creation of the line object. Does not necessarily need to be after (in either x or y) the first point. Returned point does have any offset effects applied to it. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
Vector2f }{\b\rtlch \ltrch\loch
getPerpendicular}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Get a vector that represents the perpendicular to the line, always has a magnitude of 1. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
offset}{\rtlch \ltrch\loch
 (Vector2f offset)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Offset the endpoints of our line (and recalculate the intercept) in a way that does NOT stack with previous offsets (See source for more info) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
RectangleShape * }{\b\rtlch \ltrch\loch
getDrawable}{\rtlch \ltrch\loch
 (Color color=Color::Cyan)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
This method was created for the sole purpose of dubugging line intersections, and should never really be used to draw a line It is for this reason that we don't hold the rectangle shape as a member variable, because once this issue has been solved, we should never need this again. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
rotate}{\rtlch \ltrch\loch{\*\bkmkstart AAAAAAAAAB}{\*\bkmkend AAAAAAAAAB}
 (Vector2f center, float angle)}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Detailed Description}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The line class is integral to detecting collisions between polygon classes, and thus is used internalling in the intersection method, and }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 objects. A note about these is that the name is a slight misnomer, in that by default, the lines are actually line segments, having a finite length and a start and end point. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Dependencies: <SFML/Graphics.hpp> <iostream> <tgmath.h>}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Namespaces: sf (SFML) std (Standard) }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Constructor & Destructor Documentation}
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Line::Line (Vector2f  }{\i\rtlch \ltrch\loch
p1}{\rtlch \ltrch\loch
, Vector2f  }{\i\rtlch \ltrch\loch
p2}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAC}{\*\bkmkend AAAAAAAAAC}{\*\bkmkstart AAAAAAAAAC}{\*\bkmkend AAAAAAAAAC}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 object from two endpoints. They don't necessarily have to be in order of higher/lower x or y. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
p1}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Endpoint 1 }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
p2}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Endpoint 2 }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Line::Line ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAD}{\*\bkmkend AAAAAAAAAD}{\*\bkmkstart AAAAAAAAAD}{\*\bkmkend AAAAAAAAAD}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 object with no information, using for comparing lines to see if they exist. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\b\rtlch \ltrch\loch\loch\f5\hich\af5

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Member Function Documentation}
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Line::getAngle ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAE}{\*\bkmkend AAAAAAAAAE}{\*\bkmkstart AAAAAAAAAE}{\*\bkmkend AAAAAAAAAE}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the angle the line makes with the horizontal x axis. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The line's angle }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
RectangleShape * Line::getDrawable (Color  }{\i\rtlch \ltrch\loch
color}{\rtlch \ltrch\loch
 = }{\rtlch \ltrch\loch\loch\f6\hich\af6
Color::Cyan}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAF}{\*\bkmkend AAAAAAAAAF}{\*\bkmkstart AAAAAAAAAF}{\*\bkmkend AAAAAAAAAF}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
This method was created for the sole purpose of dubugging line intersections, and should never really be used to draw a line It is for this reason that we don't hold the rectangle shape as a member variable, because once this issue has been solved, we should never need this again. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
@depracated}
\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
color}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The color to draw the line as }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
RectangleShape* A drawable rectangle that represents our line }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Vector2f Line::getEnd ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAG}{\*\bkmkend AAAAAAAAAG}{\*\bkmkstart AAAAAAAAAG}{\*\bkmkend AAAAAAAAAG}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the second point used in the creation of the line object. Does not necessarily need to be after (in either x or y) the first point. Returned point does have any offset effects applied to it. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Vector2f The second point (x, y) }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Line::getIntercept ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAH}{\*\bkmkend AAAAAAAAAH}{\*\bkmkstart AAAAAAAAAH}{\*\bkmkend AAAAAAAAAH}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the intercept, or when the line crosses the y axis. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float Return the intercept }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Vector2f Line::getPerpendicular ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAI}{\*\bkmkend AAAAAAAAAI}{\*\bkmkstart AAAAAAAAAI}{\*\bkmkend AAAAAAAAAI}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Get a vector that represents the perpendicular to the line, always has a magnitude of 1. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Vector2f A vector in the perpendicular direction to the line, with a magnitude of 1 }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Line::getSlope ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAJ}{\*\bkmkend AAAAAAAAAJ}{\*\bkmkstart AAAAAAAAAJ}{\*\bkmkend AAAAAAAAAJ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the slope, or rise over run, of the line. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float Return the slope of the line }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Vector2f Line::getStart ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAK}{\*\bkmkend AAAAAAAAAK}{\*\bkmkstart AAAAAAAAAK}{\*\bkmkend AAAAAAAAAK}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the first point used in the creation of the line object. Does not necessarily need to be before (in either x or y) the second point. Returned point does have any offset effects applied to it. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Vector2f The first point (x, y) }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Line::intersects (Line  }{\i\rtlch \ltrch\loch
line}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAL}{\*\bkmkend AAAAAAAAAL}{\*\bkmkstart AAAAAAAAAL}{\*\bkmkend AAAAAAAAAL}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Wrapper for our more involved intersection method that doesn't deal with any other parameters but the line. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
line}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The other line }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two lines are intersecting }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two lines are not intersecting }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Line::intersects (Line  }{\i\rtlch \ltrch\loch
line}{\rtlch \ltrch\loch
, Vector2f &  }{\i\rtlch \ltrch\loch
intersectionPoint}{\rtlch \ltrch\loch
, bool  }{\i\rtlch \ltrch\loch
extendLine}{\rtlch \ltrch\loch
 = }{\rtlch \ltrch\loch\loch\f6\hich\af6
false}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAM}{\*\bkmkend AAAAAAAAAM}{\*\bkmkstart AAAAAAAAAM}{\*\bkmkend AAAAAAAAAM}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Check to see if two lines intersect within their domain (between the endpoints) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
line}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The other line we are checking }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
intersectionPoint}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
A reference to a point that will hold the intersection point if it exist, or (-1, -1) if it doesn't }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
extendLine}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
If this is true, we extend the first line from a line segment to an infinite line and check collision with that }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two lines are intersecting }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two lines are not intersecting }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Line::offset (Vector2f  }{\i\rtlch \ltrch\loch
offset}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAN}{\*\bkmkend AAAAAAAAAN}{\*\bkmkstart AAAAAAAAAN}{\*\bkmkend AAAAAAAAAN}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Offset the endpoints of our line (and recalculate the intercept) in a way that does NOT stack with previous offsets (See source for more info) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
offset}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The amount we want to offset x and y by }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Line::y (float  }{\i\rtlch \ltrch\loch
x}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAO}{\*\bkmkend AAAAAAAAAO}{\*\bkmkstart AAAAAAAAAO}{\*\bkmkend AAAAAAAAAO}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Find the y value at any given x on the line (doesn't deal with endpoints/domain) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
x}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Our x value }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The y value }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\b\rtlch \ltrch\loch\loch\f5\hich\af5

\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
The documentation for this class was generated from the following files:}
\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
include/Line.hpp}
\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
src/Line.cpp}
\par \qr\widctlpar\tqc\tx4320\tqr\tx8640\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\pgndec\sbkpage\footery1440{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 25}}}
\par }\pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch\loch
Polygon Class Reference}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch
}{\rtlch \ltrch{\*\bkmkstart AAAAAAAAAP}{\*\bkmkend AAAAAAAAAP}
}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The polygon object is the most important aspect of our collisions class, and accounts for most of what will likely be used externally. Polygons can be created through either a texture, a vector of points, or any other child class of sf::Shape (CircleShape, RectangleShape, etc.). }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 objects act very similarly to the other sf::Shape classes, being able to be drawn by a RenderWindow and are able to be transformed by any method from sf::Transformable. On top of these stock attributes, Polygons are also able to be either convex or concave (unlike convexshape) and have a method to detect collision between two instances of the class, or between the class and any other sf::Shape class. With this ability comes a few more paramters that can be changed about the shape, including the density, rigidity, moment of inertia, etc. that all affect how a shape reacts to colliding with another shape. }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch\loch\loch\f6\hich\af6
#include <Polygon.hpp>}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch\loch
Inheritance diagram for Polygon:}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\qc{\rtlch \ltrch\loch
IMAGE}{\rtlch \ltrch\loch
{\*\shppict{\pict{\*\picprop{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw58\pich80\picwgoal870\pichgoal1200\pngblip
89504e470d0a1a0a0000000d494844520000003a0000005008030000007f0a962600000018504c5445ffffff000000e8ecf5758fc2900000009000000090c0c0
c00589dc1f0000000874524e5300ffffffffffffffd5ca5432000000fe494441547801ed9dc1b683200c44ef6cccffff7145298280d874f17a1e2ea681d44b92
b19c6e91249f9099994713a3c1b810cccc462ad16dbd7e78d12d6ec54313d5aedf700ab17808c5ae6f539a35e6b3134668f1d4ee5a2a5e76dcb7a919ee39fce9
acd97b8d0d077f6f396c6656a9f3c4efa266660d4d864a924b007d2d003ef9d16571b37e7425bdec17e81f39fca000633d28c0500f0a30d483020cf5cf5049f2
89c19f33405b53a2bb67591ee052075a022e742fbe2a863551e4536f157a70d92adbc5656bd6165a87baea192dcfba8fc6efbe43f3592fd0c3e177eee4708d02
9c751c0770d6151a8b3ad0347dfe039dfdbe027ca6708924c9a31704b52234d00b5caf0000000049454e44ae426082}}{\nonshppict{\pict{\*\picprop{\sp{\sn wzDescription}{\sv }}{\sp{\sn wzName}{\sv }}}\picscalex100\picscaley100\piccropl0\piccropr0\piccropt0\piccropb0\picw58\pich80\picwgoal870\pichgoal1200\wmetafile8
0100090000036e10000010009209000000001405000026060f001e0a574d464301000000000001005e580000000001000000fc09000000000000fc0900000100
00006c0000000000000000000000ffffffffffffffff0000000000000000ffffffffffffffff20454d4600000100fc0900000d00000001000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000460000002c00000020000000454d462b014001001c00
0000100000000210c0db010000000000000000000000460000004c00000040000000454d462b224000000c000000000000001e4009000c000000000000002440
00010c00000000000000214000000c00000000000000044000000c00000000000000110000000c000000080000000b0000001000000060000000600000000900
000010000000ec090000ec0900000c0000001000000000000000000000000a000000100000000000000000000000140000000c0000000d000000120000000c00
00000100000051000000000300000000000000000000955ceeff955ceeff000000000000000000000000000000003a0000005000000050000000300000008000
000080020000000000008600ee000000000000000000280000003a0000005000000001000100000000008002000000000000000000000200000000000000ffff
ff000000000000000000000000007fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff807fffffbf8fffff807fff
ffdf77ffff807fffffeff7ffff807eff1def971ddf807efeedd766eddf807efeedd776eddf807efeedb776eddf807e0eedbb76eddf807ef6edbb66ecdf807ef7
1dbb971d3f807ef7fdffffffff807e0ffdffffffff807fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff800000
000000000000fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0ffff
fffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0ffff
fffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0ffff
fffbffffffc0fffffffbffffffc0fffffffbffffffc0ffffffe0ffffffc0ffffffe0ffffffc0fffffff1ffffffc0fffffff1ffffffc0fffffffbffffffc0ffff
fffbffffffc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000051000000840500000000000000000000955ceeff955ceeff000000000000000000000000000000003a0000005000000050000000480000009800
0000ec04000000000000c60088000000000000000000280000003a000000500000000100080001000000ec04000000000000000000000800000000000000ffff
ff0000000000f5ece800c28f7500000090000090000090000000c0c0c0003a010000010138000101000001013800010100000101380001010000010138000101
0000010138000101000001011800010107000301150001010000010119000101050001010300010114000101000001011a000101080001011400010100000101
06000101080003010300010104000101050002010100010103000301030001010300010106000101000001010600010107000101030001010200010103000003
01000100030001010200020102000101030001010200010103000101060001010000010106000101070001010300010102000101030000030100010003000101
03000101020001010300010102000101030001010600010100000101060001010700010103000101020001010200010102000101030001010300010102000101
03000101020001010300010106000101000001010600050103000101030001010200010102000101030001010200010103000101020001010300010102000101
03000101060001010000010106000101040001010200010103000101020001010200010103000101020001010200020102000101030001010200020102000101
06000101000001010600010104000101030003010300010102000101030001010300020101000101030003010300010101000201070001010000010106000101
04000101090001012200010100000101060005010a00010122000101000001013800010100000101380001010000010138000101000001013800010100000101
3800010100003a0100001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c00
00001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c00
00001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c0000001d0001061c00
00001d0001061c0000001d0001061c0000001d0001061c0000001b0005061a0000001b0005061a0000001c0003061b0000001c0003061b0000001d0001061c00
00001d0001061c0000003a0100000101380701010000010138070101000001013807010100000101380701010000010138070101000001012107010116070101
000001012107010116070101000001012107010116070101000001010c07040103070101030701010307030100050701070107000201040703010c0701010000
01010b0701010407010102070101030701010207010103070101020702010207010102070101030701010b070101000001010b07010104070101020701010307
010102070101030701010207010103070101020701010f07010100000101100701010207010103070101030704010207010103070101020705010b0701010000
01010e070201030701010307010106070101020701010307010102070101030701010b070101000001010c070201050702010207010102070101030701010207
02010207010102070101030701010b070101000001010b0701010707010101070201040703010307010101070201040703010c070101000001010b0701010407
01010207010124070101000001010c07040103070101240701010000010138070101000001013807010100000101380701010000010138070101000001013807
010100003a0100000001460000001c00000010000000454d462b024000000c000000000000000e00000014000000000000001000000014000000050000000b02
00000000050000000c020000000004000000020101000400000004010d0008000000fa0200000000000000000000040000002d01000007000000fc020000ffff
ff000000040000002d0101001c000000fb0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000040000002d010200040000002e011800050000000902ffffff00040000000701030066010000430f8600ee00000050003a0000000000000000000000
0000280000003a0000005000000001000100000000008002000000000000000000000200000000000000ffffff000000000000000000000000007fffffffffff
ff807fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff807fffffbf8fffff807fffffdf77ffff807fffffeff7ffff807eff1def971d
df807efeedd766eddf807efeedd776eddf807efeedb776eddf807e0eedbb76eddf807ef6edbb66ecdf807ef71dbb971d3f807ef7fdffffffff807e0ffdffffff
ff807fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff807fffffffffffff800000000000000000fffffffbffffffc0fffffffbffff
ffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffff
ffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffff
ffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffffffc0fffffffbffff
ffc0ffffffe0ffffffc0ffffffe0ffffffc0fffffff1ffffffc0fffffff1ffffffc0fffffffbffffffc0fffffffbffffffc00000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000092090000430fc600880000005000
3a00000000000000000000000000280000003a000000500000000100080000000000c012000000000000000000000800000000000000ffffff0000000000f5ec
e800c28f7500000090000090000090000000c0c0c000010101010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100
00000000000000000000000000000000000000000000000100000000000000010101000000000000000000000000000000000000000000010000010000000000
00000000000000000000000000000000000000000100000000000100000001000000000000000000000000000000000000000001000001000000000000000000
00000000000000000000000000000000000100000000000000000100000000000000000000000000000000000000000100000100000000000001000000000000
00000101010000000100000000010000000000010100010000000101010000000100000001000000000000010000010000000000000100000000000000010000
00010000010000000100010000000100000101000001000000010000010000000100000000000001000001000000000000010000000000000001000000010000
01000000010001000000010000000100000100000001000001000000010000000000000100000100000000000001000000000000000100000001000001000001
00000100000001000000010000010000000100000100000001000000000000010000010000000000000101010101000000010000000100000100000100000001
00000100000001000001000000010000010000000100000000000001000001000000000000010000000001000001000000010000010000010000000100000100
00010100000100000001000001010000010000000000000100000100000000000001000000000100000001010100000001000001000000010000000101000100
00000101010000000100010100000000000000010000010000000000000100000000010000000000000000000100000000000000000000000000000000000000
00000000000000000000000000000001000001000000000000010101010100000000000000000000010000000000000000000000000000000000000000000000
00000000000000000000000100000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000010000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
00000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000
00000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000606060606000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000060606060600000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000060606000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000006060600000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000001010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010100000107070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070707070707010000010707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070701000001070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070100000107070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707010000010707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070701000001070707070707070707070707070707070707070707070707070707070707070707
01070707070707070707070707070707070707070707070100000107070707070707070707070707070707070707070707070707070707070707070701070707
07070707070707070707070707070707070707010000010707070707070707070707070707070707070707070707070707070707070707070107070707070707
07070707070707070707070707070701000001070707070707070707070707010101010707070107070701070707010101070107010701010707070701010107
07070707070707070707070100000107070707070707070707070107070707010707010707070107070107070701070701010707010707010707070107070707
07070707070707010000010707070707070707070707010707070701070701070707010707010707070107070107070701070701070707070707070707070707
07070701000001070707070707070707070707070707070107070107070701070707010101010707010707070107070101010101070707070707070707070701
00000107070707070707070707070707070101070707010707070107070707070701070701070707010707010707070107070707070707070707070100000107
07070707070707070707070101070707070701010707010707010707070107070101070701070701070707010707070707070707070707010000010707070707
07070707070701070707070707070107010107070707010101070707010701010707070701010107070707070707070707070701000001070707070707070707
07070107070707010707010707070707070707070707070707070707070707070707070707070707070707070707070100000107070707070707070707070701
01010107070701070707070707070707070707070707070707070707070707070707070707070707070707010000010707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070707070701000001070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070100000107070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707010000010707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070707070701000001070707070707070707070707070707070707070707070707070707070707070707
07070707070707070707070707070707070707070707070100000101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010000030000000000}}
}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Public Member Functions}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 (Texture *texture, Detail detail=Detail::Optimal, vector< Color > ignoredColors=\{\})}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 object from a given texture (image). }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 (vector< Vector2f > points)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 object from a vector of points. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 (CircleShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 object from a sf::CircleShape object. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 (RectangleShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 object from a sf::RectangleShape object. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 (ConvexShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Construct a new }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 object from a sf::ConvexShape object. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
virtual size_t }{\b\rtlch \ltrch\loch
getPointCount}{\rtlch \ltrch\loch
 () const}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Get the number of verticies on our polygon. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
virtual Vector2f }{\b\rtlch \ltrch\loch
getPoint}{\rtlch \ltrch\loch
 (size_t index) const}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Get the vertex at index in the vector m_points. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
vector< Vector2f > }{\b\rtlch \ltrch\loch
getPoints}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Returns the entire vector of points that represent the shape, without any modifications from transformations (rotate, move, scale) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
vector< }{\b\rtlch \ltrch\loch
Line}{\rtlch \ltrch\loch
 > }{\b\rtlch \ltrch\loch
getLines}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the lines that represent the polygon's outline/border. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getFarthestVertex}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Returns the distance of the farthest vertex from the centroid. Calculated in findCentroid() }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
Vector2f }{\b\rtlch \ltrch\loch
getCentroid}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Returns the centroid of the shape (does not recalculate it) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setSolid}{\rtlch \ltrch\loch
 (bool state)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Set whether the shape is solid (can collide with other shapes) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
isSolid}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Check whether or not the shape can collide with other shapes. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setRigidity}{\rtlch \ltrch\loch
 (float value)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Set how much energy is conserved when this object collides with another. 0 for no energy conserved (completely inelastic collision) and 1 for completely elastic (all energy conserved) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getRigidity}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Get how much energy is conserved when this object collides with another. 0 for no energy conserved (completely inelastic collision) and 1 for completely elastic (all energy conserved) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setMovableByCollision}{\rtlch \ltrch\loch
 (bool value)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Set whether the shape can be moved by being collided with by another object. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
isMovableByCollision}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Get whether the shape can be moved by being collided with by another object. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setDensity}{\rtlch \ltrch\loch
 (float newDensity)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Set the density of the object, used in calculate its mass and moment of inertia (default is 1) and recalculate both values. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getDensity}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Get the relative density of the polygon. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getMass}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the mass of the polygon, using the density and area to calculate. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getMomentOfInertia}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the moment of inertia of the polygon, using the density and vertex distribution. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setVelocity}{\rtlch \ltrch\loch
 (Vector2f newVelocity)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Changes the linear velocity of the polygon to the paramter provided. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
Vector2f }{\b\rtlch \ltrch\loch
getVelocity}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Returns the current linear velocity of the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setAngularVelocity}{\rtlch \ltrch\loch
 (float newAngularVelocity)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Changes the angular velocity of the polygon to the paramter provided. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getAngularVelocity}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Returns the current angular velocity of the polygon to the paramter provided. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
update}{\rtlch \ltrch\loch
 (float elapsedTime)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Updates the shape and applies both linear and angular velocity to update the position and rotation of the polygon. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
adjustVelocityFromCollision}{\rtlch \ltrch\loch
 (Vector2f resultant, }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Currently WIP!! }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setScale}{\rtlch \ltrch\loch
 (const Vector2f &}{\b\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setScale}{\rtlch \ltrch\loch
 (float xScale, float yScale)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
 (const Vector2f &scale)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
 (float xFactor, float yFactor)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setRotation}{\rtlch \ltrch\loch
 (float angle)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the rotation like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
rotate}{\rtlch \ltrch\loch
 (float angle)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the rotation like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setPosition}{\rtlch \ltrch\loch
 (const Vector2f &position)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
setPosition}{\rtlch \ltrch\loch
 (float x, float y)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
move}{\rtlch \ltrch\loch
 (const Vector2f &offset)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
void }{\b\rtlch \ltrch\loch
move}{\rtlch \ltrch\loch
 (float xOffset, float yOffset)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (}{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Check the intersection between two polygon shapes. Has three levels of detection, to reduce unecessary calculations and resource usage. Returns no information about collision after-effects or resultants. For that, see }{\i\b\rtlch \ltrch\loch
intersects(Polygon shape, Vector2f& resultant)}{\i\rtlch \ltrch\loch
. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (RectangleShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
A wrapper method to check the intersection between a }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 shape and a RectangleShape by converting it to a polygon and then using our full intersection method See }{\i\b\rtlch \ltrch\loch
intersects(Polygon shape)}{\i\rtlch \ltrch\loch
 for the full intersection method. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (CircleShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
A wrapper method to check the intersection between a }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 shape and a CircleShape by converting it to a polygon and then using our full intersection method See }{\i\b\rtlch \ltrch\loch
intersects(Polygon shape)}{\i\rtlch \ltrch\loch
 for the full intersection method. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (ConvexShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
A wrapper method to check the intersection between a }{\i\b\rtlch \ltrch\loch
Polygon}{\i\rtlch \ltrch\loch
 shape and a ConvexShape by converting it to a polygon and then using our full intersection method See }{\i\b\rtlch \ltrch\loch
intersects(Polygon shape)}{\i\rtlch \ltrch\loch
 for the full intersection method. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch
 (}{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape, Vector2f &resultant)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Currently WIP!! }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch{\*\bkmkstart AAAAAAAAAQ}{\*\bkmkend AAAAAAAAAQ}
 (RectangleShape shape, Vector2f &resultant)}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch{\*\bkmkstart AAAAAAAAAR}{\*\bkmkend AAAAAAAAAR}
 (CircleShape shape, Vector2f &resultant)}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
intersects}{\rtlch \ltrch\loch{\*\bkmkstart AAAAAAAAAS}{\*\bkmkend AAAAAAAAAS}
 (ConvexShape shape, Vector2f &resultant)}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
contains}{\rtlch \ltrch\loch
 (}{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
contains}{\rtlch \ltrch\loch
 (RectangleShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
contains}{\rtlch \ltrch\loch
 (CircleShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
bool }{\b\rtlch \ltrch\loch
contains}{\rtlch \ltrch\loch
 (ConvexShape shape)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
float }{\b\rtlch \ltrch\loch
getArea}{\rtlch \ltrch\loch
 ()}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Return the area of the polygon. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Static Public Member Functions}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static void }{\b\rtlch \ltrch\loch
getArea}{\rtlch \ltrch\loch
 (vector< Vector2f > points, float &value)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
This is a static method that finds the area of any given shape (vector of points) Ngl, I don't remember where I found this method for finding the area of a polygon, but will post when I find it. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Detailed Description}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
The polygon object is the most important aspect of our collisions class, and accounts for most of what will likely be used externally. Polygons can be created through either a texture, a vector of points, or any other child class of sf::Shape (CircleShape, RectangleShape, etc.). }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 objects act very similarly to the other sf::Shape classes, being able to be drawn by a RenderWindow and are able to be transformed by any method from sf::Transformable. On top of these stock attributes, Polygons are also able to be either convex or concave (unlike convexshape) and have a method to detect collision between two instances of the class, or between the class and any other sf::Shape class. With this ability comes a few more paramters that can be changed about the shape, including the density, rigidity, moment of inertia, etc. that all affect how a shape reacts to colliding with another shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Dependencies: <SFML/Graphics.hpp> <iostream> <tgmath.h>}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Namespaces: sf (SFML) std (Standard) }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Constructor & Destructor Documentation}
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Polygon::Polygon (Texture *  }{\i\rtlch \ltrch\loch
texture}{\rtlch \ltrch\loch
, Detail  }{\i\rtlch \ltrch\loch
detail}{\rtlch \ltrch\loch
 = }{\rtlch \ltrch\loch\loch\f6\hich\af6
Detail::Optimal}{\rtlch \ltrch\loch
, vector< Color >  }{\i\rtlch \ltrch\loch
ignoredColors}{\rtlch \ltrch\loch
 = }{\rtlch \ltrch\loch\loch\f6\hich\af6
\{\}}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAT}{\*\bkmkend AAAAAAAAAT}{\*\bkmkstart AAAAAAAAAT}{\*\bkmkend AAAAAAAAAT}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 object from a given texture (image). }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
texture}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The texture for the shape/sprite we want to model }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
detail}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The level of detail to keep in the shape, from least to most: Less, More, Optimal, Exact }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
ignoredColors}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
By default, all pixels that arent (0, 0, 0, 0) will be included, any colors specified here will also be ignored }\cell\row\pard\pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360\rtlch \ltrch\loch

\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Polygon::Polygon (vector< Vector2f >  }{\i\rtlch \ltrch\loch
points}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAU}{\*\bkmkend AAAAAAAAAU}{\*\bkmkstart AAAAAAAAAU}{\*\bkmkend AAAAAAAAAU}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 object from a vector of points. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
points}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The points that constitute our shape }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Polygon::Polygon (CircleShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAV}{\*\bkmkend AAAAAAAAAV}{\*\bkmkstart AAAAAAAAAV}{\*\bkmkend AAAAAAAAAV}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 object from a sf::CircleShape object. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The CircleShape object whose points we will use }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Polygon::Polygon (RectangleShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAW}{\*\bkmkend AAAAAAAAAW}{\*\bkmkstart AAAAAAAAAW}{\*\bkmkend AAAAAAAAAW}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 object from a sf::RectangleShape object. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The RectangleShape object whose points we will use }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Polygon::Polygon (ConvexShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAX}{\*\bkmkend AAAAAAAAAX}{\*\bkmkstart AAAAAAAAAX}{\*\bkmkend AAAAAAAAAX}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Construct a new }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 object from a sf::ConvexShape object. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The ConvexShape object who points we will use }\cell\row\pard\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\b\rtlch \ltrch\loch\loch\f5\hich\af5

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Member Function Documentation}
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::adjustVelocityFromCollision (Vector2f  }{\i\rtlch \ltrch\loch
resultant}{\rtlch \ltrch\loch
, Polygon  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAY}{\*\bkmkend AAAAAAAAAY}{\*\bkmkstart AAAAAAAAAY}{\*\bkmkend AAAAAAAAAY}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Currently WIP!! }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
resultant}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The unit vector in the direction of the new motion }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The other colliding shape }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::contains (Polygon  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAAAZ}{\*\bkmkend AAAAAAAAAZ}{\*\bkmkstart AAAAAAAAAZ}{\*\bkmkend AAAAAAAAAZ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl\rtlch \ltrch\loch
\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::contains (RectangleShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABA}{\*\bkmkend AAAAAAAABA}{\*\bkmkstart AAAAAAAABA}{\*\bkmkend AAAAAAAABA}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl\rtlch \ltrch\loch
\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::contains (CircleShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABB}{\*\bkmkend AAAAAAAABB}{\*\bkmkstart AAAAAAAABB}{\*\bkmkend AAAAAAAABB}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl\rtlch \ltrch\loch
\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::contains (ConvexShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABC}{\*\bkmkend AAAAAAAABC}{\*\bkmkstart AAAAAAAABC}{\*\bkmkend AAAAAAAABC}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Not implemented! }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl\rtlch \ltrch\loch
\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getAngularVelocity ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABD}{\*\bkmkend AAAAAAAABD}{\*\bkmkstart AAAAAAAABD}{\*\bkmkend AAAAAAAABD}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns the current angular velocity of the polygon to the paramter provided. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float Current angular velocity of the polygon }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::getArea (vector< Vector2f >  }{\i\rtlch \ltrch\loch
points}{\rtlch \ltrch\loch
, float &  }{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABE}{\*\bkmkend AAAAAAAABE}{\*\bkmkstart AAAAAAAABE}{\*\bkmkend AAAAAAAABE}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
This is a static method that finds the area of any given shape (vector of points) Ngl, I don't remember where I found this method for finding the area of a polygon, but will post when I find it. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
points}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
A Vector of points the represent our shape. See }{\b\rtlch \ltrch\loch
Polygon::getPoints()}{\rtlch \ltrch\loch
 }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
A referenced float that our area will be stored in }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getArea ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABF}{\*\bkmkend AAAAAAAABF}{\*\bkmkstart AAAAAAAABF}{\*\bkmkend AAAAAAAABF}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the area of the polygon. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The area of the polygon }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Vector2f Polygon::getCentroid ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABG}{\*\bkmkend AAAAAAAABG}{\*\bkmkstart AAAAAAAABG}{\*\bkmkend AAAAAAAABG}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns the centroid of the shape (does not recalculate it) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Vector2f The centroid of the shape }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getDensity ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABH}{\*\bkmkend AAAAAAAABH}{\*\bkmkstart AAAAAAAABH}{\*\bkmkend AAAAAAAABH}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Get the relative density of the polygon. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The density of the polygon }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getFarthestVertex ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABI}{\*\bkmkend AAAAAAAABI}{\*\bkmkstart AAAAAAAABI}{\*\bkmkend AAAAAAAABI}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns the distance of the farthest vertex from the centroid. Calculated in findCentroid() }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The farthest distance of the shape }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
vector< Line > Polygon::getLines ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABJ}{\*\bkmkend AAAAAAAABJ}{\*\bkmkstart AAAAAAAABJ}{\*\bkmkend AAAAAAAABJ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the lines that represent the polygon's outline/border. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
vector<Line> A vector of lines that represent the outline }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getMass ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABK}{\*\bkmkend AAAAAAAABK}{\*\bkmkstart AAAAAAAABK}{\*\bkmkend AAAAAAAABK}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the mass of the polygon, using the density and area to calculate. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The mass of the shape }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getMomentOfInertia ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABL}{\*\bkmkend AAAAAAAABL}{\*\bkmkstart AAAAAAAABL}{\*\bkmkend AAAAAAAABL}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Return the moment of inertia of the polygon, using the density and vertex distribution. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The moment of inertia of the shape }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Vector2f Polygon::getPoint (size_t  }{\i\rtlch \ltrch\loch
index}{\rtlch \ltrch\loch
) const}{\rtlch \ltrch\loch\loch\f6\hich\af6
[virtual]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABM}{\*\bkmkend AAAAAAAABM}{\*\bkmkstart AAAAAAAABM}{\*\bkmkend AAAAAAAABM}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Get the vertex at index in the vector m_points. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
index}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The index of the point we are looking for }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Vector2f The point at index in m_points }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
size_t Polygon::getPointCount () const}{\rtlch \ltrch\loch\loch\f6\hich\af6
[virtual]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABN}{\*\bkmkend AAAAAAAABN}{\*\bkmkstart AAAAAAAABN}{\*\bkmkend AAAAAAAABN}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Get the number of verticies on our polygon. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
size_t The number of verticies }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
vector< Vector2f > Polygon::getPoints ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABO}{\*\bkmkend AAAAAAAABO}{\*\bkmkstart AAAAAAAABO}{\*\bkmkend AAAAAAAABO}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns the entire vector of points that represent the shape, without any modifications from transformations (rotate, move, scale) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
vector<Vector2f> Our shape's vector of verticies }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float Polygon::getRigidity ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABP}{\*\bkmkend AAAAAAAABP}{\*\bkmkstart AAAAAAAABP}{\*\bkmkend AAAAAAAABP}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Get how much energy is conserved when this object collides with another. 0 for no energy conserved (completely inelastic collision) and 1 for completely elastic (all energy conserved) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The rigidity, 0 for complete inelastic, 1 for complete elastic }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
Vector2f Polygon::getVelocity ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABQ}{\*\bkmkend AAAAAAAABQ}{\*\bkmkstart AAAAAAAABQ}{\*\bkmkend AAAAAAAABQ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns the current linear velocity of the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
Vector2f Current linear velocity of the shape }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::intersects (Polygon  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABR}{\*\bkmkend AAAAAAAABR}{\*\bkmkstart AAAAAAAABR}{\*\bkmkend AAAAAAAABR}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Check the intersection between two polygon shapes. Has three levels of detection, to reduce unecessary calculations and resource usage. Returns no information about collision after-effects or resultants. For that, see }{\b\rtlch \ltrch\loch
intersects(Polygon shape, Vector2f& resultant)}{\rtlch \ltrch\loch
. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The shape we are checking to be colliding with the current one }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two shapes are colliding }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two shapes aren't colliding }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::intersects (RectangleShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABS}{\*\bkmkend AAAAAAAABS}{\*\bkmkstart AAAAAAAABS}{\*\bkmkend AAAAAAAABS}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
A wrapper method to check the intersection between a }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape and a RectangleShape by converting it to a polygon and then using our full intersection method See }{\b\rtlch \ltrch\loch
intersects(Polygon shape)}{\rtlch \ltrch\loch
 for the full intersection method. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The shape we are checking to be colliding with the current one }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two shapes are colliding }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two shapes aren't colliding }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::intersects (CircleShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABT}{\*\bkmkend AAAAAAAABT}{\*\bkmkstart AAAAAAAABT}{\*\bkmkend AAAAAAAABT}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
A wrapper method to check the intersection between a }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape and a CircleShape by converting it to a polygon and then using our full intersection method See }{\b\rtlch \ltrch\loch
intersects(Polygon shape)}{\rtlch \ltrch\loch
 for the full intersection method. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The shape we are checking to be colliding with the current one }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two shapes are colliding }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two shapes aren't colliding }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::intersects (ConvexShape  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABU}{\*\bkmkend AAAAAAAABU}{\*\bkmkstart AAAAAAAABU}{\*\bkmkend AAAAAAAABU}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
A wrapper method to check the intersection between a }{\b\rtlch \ltrch\loch
Polygon}{\rtlch \ltrch\loch
 shape and a ConvexShape by converting it to a polygon and then using our full intersection method See }{\b\rtlch \ltrch\loch
intersects(Polygon shape)}{\rtlch \ltrch\loch
 for the full intersection method. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The shape we are checking to be colliding with the current one }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two shapes are colliding }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two shapes aren't colliding }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::intersects (Polygon  }{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
, Vector2f &  }{\i\rtlch \ltrch\loch
resultant}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABV}{\*\bkmkend AAAAAAAABV}{\*\bkmkstart AAAAAAAABV}{\*\bkmkend AAAAAAAABV}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Currently WIP!! }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
shape}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The shape we are checking to be colliding with the current one }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
resultant}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The resultant of the collision (i.e. how the object moves afterwards) }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The two shapes are colliding }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The two shapes aren't colliding }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::isMovableByCollision ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABW}{\*\bkmkend AAAAAAAABW}{\*\bkmkstart AAAAAAAABW}{\*\bkmkend AAAAAAAABW}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Get whether the shape can be moved by being collided with by another object. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true The shape can be moved }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false The shape cannot be moved }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
bool Polygon::isSolid ()}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABX}{\*\bkmkend AAAAAAAABX}{\*\bkmkstart AAAAAAAABX}{\*\bkmkend AAAAAAAABX}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Check whether or not the shape can collide with other shapes. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
true Can collide }
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
false Cannot collide }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::move (const Vector2f &  }{\i\rtlch \ltrch\loch
d}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABY}{\*\bkmkend AAAAAAAABY}{\*\bkmkstart AAAAAAAABY}{\*\bkmkend AAAAAAAABY}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
d}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The amount to change x and y by }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::move (float  }{\i\rtlch \ltrch\loch
dx}{\rtlch \ltrch\loch
, float  }{\i\rtlch \ltrch\loch
dy}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAABZ}{\*\bkmkend AAAAAAAABZ}{\*\bkmkstart AAAAAAAABZ}{\*\bkmkend AAAAAAAABZ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
dx}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Amount to change the x coordinate by }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
dy}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Amount to change the y coordinate by }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::rotate (float  }{\i\rtlch \ltrch\loch
angle}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACA}{\*\bkmkend AAAAAAAACA}{\*\bkmkstart AAAAAAAACA}{\*\bkmkend AAAAAAAACA}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the rotation like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
angle}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The angle we are rotating the shape by }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::scale (const Vector2f &  }{\i\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACB}{\*\bkmkend AAAAAAAACB}{\*\bkmkstart AAAAAAAACB}{\*\bkmkend AAAAAAAACB}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The scaling factors for our polygon }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::scale (float  }{\i\rtlch \ltrch\loch
xFactor}{\rtlch \ltrch\loch
, float  }{\i\rtlch \ltrch\loch
yFactor}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACC}{\*\bkmkend AAAAAAAACC}{\*\bkmkstart AAAAAAAACC}{\*\bkmkend AAAAAAAACC}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
xFactor}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The x scaling factor }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
yFactor}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The y scaling factor }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setAngularVelocity (float  }{\i\rtlch \ltrch\loch
newAngularVelocity}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACD}{\*\bkmkend AAAAAAAACD}{\*\bkmkstart AAAAAAAACD}{\*\bkmkend AAAAAAAACD}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Changes the angular velocity of the polygon to the paramter provided. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
newAngularVelocity}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The new angular velocity of the polygon }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setDensity (float  }{\i\rtlch \ltrch\loch
newDensity}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACE}{\*\bkmkend AAAAAAAACE}{\*\bkmkstart AAAAAAAACE}{\*\bkmkend AAAAAAAACE}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Set the density of the object, used in calculate its mass and moment of inertia (default is 1) and recalculate both values. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
newDensity}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The density of the object (default is 1) }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setMovableByCollision (bool  }{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACF}{\*\bkmkend AAAAAAAACF}{\*\bkmkstart AAAAAAAACF}{\*\bkmkend AAAAAAAACF}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Set whether the shape can be moved by being collided with by another object. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Whether or not the shape can be moved by another polygon }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setPosition (const Vector2f &  }{\i\rtlch \ltrch\loch
position}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACG}{\*\bkmkend AAAAAAAACG}{\*\bkmkstart AAAAAAAACG}{\*\bkmkend AAAAAAAACG}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
position}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The new x and y coordinates of the shape }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setPosition (float  }{\i\rtlch \ltrch\loch
x}{\rtlch \ltrch\loch
, float  }{\i\rtlch \ltrch\loch
y}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACH}{\*\bkmkend AAAAAAAACH}{\*\bkmkstart AAAAAAAACH}{\*\bkmkend AAAAAAAACH}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the position like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
x}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
New x coordinate }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
y}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
New y coordinate }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setRigidity (float  }{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACI}{\*\bkmkend AAAAAAAACI}{\*\bkmkstart AAAAAAAACI}{\*\bkmkend AAAAAAAACI}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Set how much energy is conserved when this object collides with another. 0 for no energy conserved (completely inelastic collision) and 1 for completely elastic (all energy conserved) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The new rigidity, 0 for complete inelastic, 1 for complete elastic }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setRotation (float  }{\i\rtlch \ltrch\loch
angle}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACJ}{\*\bkmkend AAAAAAAACJ}{\*\bkmkstart AAAAAAAACJ}{\*\bkmkend AAAAAAAACJ}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the rotation like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
angle}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The angle we are setting the rotation to (default is 0) }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setScale (const Vector2f &  }{\i\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACK}{\*\bkmkend AAAAAAAACK}{\*\bkmkstart AAAAAAAACK}{\*\bkmkend AAAAAAAACK}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
scale}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The scaling factors for our polygon }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setScale (float  }{\i\rtlch \ltrch\loch
xFactor}{\rtlch \ltrch\loch
, float  }{\i\rtlch \ltrch\loch
yFactor}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACL}{\*\bkmkend AAAAAAAACL}{\*\bkmkstart AAAAAAAACL}{\*\bkmkend AAAAAAAACL}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
An overriden method from sf::Shape that changes the scale like its super-counterpart and also recreates the lines that represent the shape. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
xFactor}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The x scaling factor }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
yFactor}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The y scaling factor }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setSolid (bool  }{\i\rtlch \ltrch\loch
state}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACM}{\*\bkmkend AAAAAAAACM}{\*\bkmkstart AAAAAAAACM}{\*\bkmkend AAAAAAAACM}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Set whether the shape is solid (can collide with other shapes) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
state}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
Whether or not the shape is solid }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::setVelocity (Vector2f  }{\i\rtlch \ltrch\loch
newVelocity}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACN}{\*\bkmkend AAAAAAAACN}{\*\bkmkstart AAAAAAAACN}{\*\bkmkend AAAAAAAACN}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Changes the linear velocity of the polygon to the paramter provided. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
newVelocity}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The new velocity of the polygon }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void Polygon::update (float  }{\i\rtlch \ltrch\loch
elapsedTime}{\rtlch \ltrch\loch
)}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACO}{\*\bkmkend AAAAAAAACO}{\*\bkmkstart AAAAAAAACO}{\*\bkmkend AAAAAAAACO}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Updates the shape and applies both linear and angular velocity to update the position and rotation of the polygon. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
elapsedTime}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The amount of time that has elapsed since the last update }\cell\row\pard\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\b\rtlch \ltrch\loch\loch\f5\hich\af5

\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
The documentation for this class was generated from the following files:}
\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
include/Polygon.hpp}
\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
src/Intersects.cpp}
\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
src/Polygon.cpp}
\par \qr\widctlpar\tqc\tx4320\tqr\tx8640\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\rtlch \ltrch\loch

\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\pgndec\sbkpage\footery1440{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 28}}}
\par }\pard\plain \s2\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs28{\rtlch \ltrch\loch
VectorMath Class Reference}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch
}{\rtlch \ltrch{\*\bkmkstart AAAAAAAACP}{\*\bkmkend AAAAAAAACP}
}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
This class contains several different mathematical operations and calculations used to apply transformations, find dot/cross products, and several other use cases. All methods defined in this class are static (and any new additions should follow suit), though there is no other connection between the functions. Also, not all functions use vectors, as the name might suggest, but rather that they have to deal with directionality. }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch\loch\loch\f6\hich\af6
#include <VectorMath.hpp>}
\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Static Public Member Functions}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static void }{\b\rtlch \ltrch\loch
dot}{\rtlch \ltrch\loch
 (Vector2f v1, Vector2f v2, float &value)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Compute the dot product between two vectors (sf::Vector2f) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static void }{\b\rtlch \ltrch\loch
dot}{\rtlch \ltrch\loch
 (Vector3f v1, Vector3f v2, float &value)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Compute the dot product between two vectors (sf::Vector3f) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static Vector2f }{\b\rtlch \ltrch\loch
cross}{\rtlch \ltrch\loch{\*\bkmkstart AAAAAAAACQ}{\*\bkmkend AAAAAAAACQ}
 (Vector2f, Vector2f)}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static Vector3f }{\b\rtlch \ltrch\loch
cross}{\rtlch \ltrch\loch{\*\bkmkstart AAAAAAAACR}{\*\bkmkend AAAAAAAACR}
 (Vector3f, Vector3f)}
\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static void }{\b\rtlch \ltrch\loch
angleBetween}{\rtlch \ltrch\loch
 (Vector2f v1, Vector2f v2, float &angle)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Find the angle between two vectors (sf::Vector2f) in 2D. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static void }{\b\rtlch \ltrch\loch
rotate}{\rtlch \ltrch\loch
 (Vector2f &p, Vector2f origin, float angle)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Apply a rotation transformation to a point about some origin. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static float }{\b\rtlch \ltrch\loch
mag}{\rtlch \ltrch\loch
 (Vector2f v)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Find the magnitude of a vector (sf::Vector2f) }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static void }{\b\rtlch \ltrch\loch
normalize}{\rtlch \ltrch\loch
 (Vector2f &v, float magnitude=1)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Adjust a vector (sf::Vector2f) such that its total magnitude is equal to the parameter provided. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s83\widctlpar\tx360\li360\ri0\lin360\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx360\li360\ri0\lin360\rin0\fi-360{\rtlch \ltrch\loch
static int }{\b\rtlch \ltrch\loch
quadrant}{\rtlch \ltrch\loch
 (Vector2f point, Vector2f origin=Vector2f(0, 0))}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\i\rtlch \ltrch\loch
Find what quadrant a point is in relative to a origin. }
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Detailed Description}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
This class contains several different mathematical operations and calculations used to apply transformations, find dot/cross products, and several other use cases. All methods defined in this class are static (and any new additions should follow suit), though there is no other connection between the functions. Also, not all functions use vectors, as the name might suggest, but rather that they have to deal with directionality. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Dependencies: <SFML/Graphics.hpp> (Vector2f and Vector3f) <tgmath.h> (cos and sin)}
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22{\rtlch \ltrch\loch
Namespaces: sf (SFML) }
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\rtlch \ltrch\loch

\par \pard\plain \s3\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
Member Function Documentation}
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void VectorMath::angleBetween (Vector2f  }{\i\rtlch \ltrch\loch
v1}{\rtlch \ltrch\loch
, Vector2f  }{\i\rtlch \ltrch\loch
v2}{\rtlch \ltrch\loch
, float &  }{\i\rtlch \ltrch\loch
angle}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACS}{\*\bkmkend AAAAAAAACS}{\*\bkmkstart AAAAAAAACS}{\*\bkmkend AAAAAAAACS}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Find the angle between two vectors (sf::Vector2f) in 2D. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v1}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The first vector }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v2}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The second vector }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
angle}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The variable in which the angle will be stored in }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void VectorMath::dot (Vector2f  }{\i\rtlch \ltrch\loch
v1}{\rtlch \ltrch\loch
, Vector2f  }{\i\rtlch \ltrch\loch
v2}{\rtlch \ltrch\loch
, float &  }{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACT}{\*\bkmkend AAAAAAAACT}{\*\bkmkstart AAAAAAAACT}{\*\bkmkend AAAAAAAACT}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Compute the dot product between two vectors (sf::Vector2f) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v1}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The first vector }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v2}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The second vector }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The variable in which the value will be stored in }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void VectorMath::dot (Vector3f  }{\i\rtlch \ltrch\loch
v1}{\rtlch \ltrch\loch
, Vector3f  }{\i\rtlch \ltrch\loch
v2}{\rtlch \ltrch\loch
, float &  }{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACU}{\*\bkmkend AAAAAAAACU}{\*\bkmkstart AAAAAAAACU}{\*\bkmkend AAAAAAAACU}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Compute the dot product between two vectors (sf::Vector3f) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v1}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The first vector }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v2}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The second vector }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
value}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The variable in which the value will be stored in }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
float VectorMath::mag (Vector2f  }{\i\rtlch \ltrch\loch
v}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACV}{\*\bkmkend AAAAAAAACV}{\*\bkmkstart AAAAAAAACV}{\*\bkmkend AAAAAAAACV}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Find the magnitude of a vector (sf::Vector2f) }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The vector }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
float The magnitude }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void VectorMath::normalize (Vector2f &  }{\i\rtlch \ltrch\loch
v}{\rtlch \ltrch\loch
, float  }{\i\rtlch \ltrch\loch
magnitude}{\rtlch \ltrch\loch
 = }{\rtlch \ltrch\loch\loch\f6\hich\af6
1}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACW}{\*\bkmkend AAAAAAAACW}{\*\bkmkstart AAAAAAAACW}{\*\bkmkend AAAAAAAACW}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Adjust a vector (sf::Vector2f) such that its total magnitude is equal to the parameter provided. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
v}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The vector. The normalized value will overwrite the old value }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
magnitude}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The magnitude we want to the vector to have }\cell\row\pard\pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
int VectorMath::quadrant (Vector2f  }{\i\rtlch \ltrch\loch
point}{\rtlch \ltrch\loch
, Vector2f  }{\i\rtlch \ltrch\loch
origin}{\rtlch \ltrch\loch
 = }{\rtlch \ltrch\loch\loch\f6\hich\af6
Vector2f(0,\~ 0)}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACX}{\*\bkmkend AAAAAAAACX}{\*\bkmkstart AAAAAAAACX}{\*\bkmkend AAAAAAAACX}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Find what quadrant a point is in relative to a origin. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
point}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The point who quadrant we want to find }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
origin}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The origin }\cell\row\pard\pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Returns:}
\par \pard\plain \s57\ql\widctlpar\li720\ri0\lin720\rin0\fi0\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li720\ri0\lin720\rin0\fi0{\rtlch \ltrch\loch
int A quadrant number (1-4) }
\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch
}{\rtlch \ltrch
}{\rtlch \ltrch\loch
void VectorMath::rotate (Vector2f &  }{\i\rtlch \ltrch\loch
p}{\rtlch \ltrch\loch
, Vector2f  }{\i\rtlch \ltrch\loch
origin}{\rtlch \ltrch\loch
, float  }{\i\rtlch \ltrch\loch
angleInDegrees}{\rtlch \ltrch\loch
)}{\rtlch \ltrch\loch\loch\f6\hich\af6
[static]}
\par \pard\plain \s42\qj\widctlpar\li360\ri0\lin360\rin0\fi0\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs20\li360\ri0\lin360\rin0\fi0{\*\bkmkstart AAAAAAAACY}{\*\bkmkend AAAAAAAACY}{\*\bkmkstart AAAAAAAACY}{\*\bkmkend AAAAAAAACY}\rtlch \ltrch\loch

\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Apply a rotation transformation to a point about some origin. }
\par \pard\plain \s17\qj\widctlpar\sb30\sa60\dbch\af8\dbch\af11\afs24\loch\f3\fs22\li360\ri0\lin360\rin0\fi0\rtlch \ltrch\loch

\par \pard\plain \s5\widctlpar\sb90\sa30\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20\qj\li360\ri0\lin360\rin0\fi0{\rtlch \ltrch\loch
Parameters:}
\par \trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
p}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The point we want to rotate. Rotated value will overwrite previous value }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
origin}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The point we are rotating p about }\cell\row\pard\trowd\trql\trleft426\ltrrow\trpaddft3\trpaddt0\trpaddfl3\trpaddl0\trpaddfb3\trpaddb0\trpaddfr3\trpaddr0\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx2186\clbrdrt\brdrs\brdrw10\brdrcf15\clbrdrl\brdrs\brdrw10\brdrcf15\clpadft3\clpadt108\clbrdrb\brdrs\brdrw10\brdrcf15\clbrdrr\brdrs\brdrw10\brdrcf15\clpadfr3\clpadr108\clvertalt\cellx8747\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\i\rtlch \ltrch\loch
angleInDegrees}{\rtlch \ltrch\loch
 }\cell\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\intbl{\rtlch \ltrch\loch
The amount we are rotating, in degrees }\cell\row\pard\pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\brdrb\brdrs\brdrw5\brdrcf1\brsp20\b\rtlch \ltrch\loch\loch\f5\hich\af5

\par \pard\plain \s4\widctlpar\sb240\sa60\keepn\b\dbch\af8\dbch\af11\afs24\loch\f5\fs20{\rtlch \ltrch\loch
The documentation for this class was generated from the following files:}
\par \pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
include/VectorMath.hpp}
\par \qr\widctlpar\tqc\tx4320\tqr\tx8640\pard\plain \s84\widctlpar\tx720\li720\ri0\lin720\rin0\fi-360\dbch\af8\dbch\af11\afs24\loch\f3\fs20\tx720\li720\ri0\lin720\rin0\fi-360{\rtlch \ltrch\loch
src/VectorMath.cpp}
\par \sect\sectd\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1800\margrsxn1800\margtsxn1440\margbsxn1440\footery720\pgndec\sbkpage\footery1440{\footer\pard\plain \s25\qr\widctlpar\tqc\tx4320\tqr\tx8640\dbch\af8\dbch\af11\afs24\loch\f3\fs20{\rtlch \ltrch
{\field{\*\fldinst  PAGE }{\fldrslt 29}}}
\par }\pard\plain \s1\widctlpar\sb240\sa60\keepn\b\kerning1\dbch\af8\dbch\af11\afs24\loch\f5\fs36{\rtlch \ltrch\loch
Index}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033{\rtlch \ltrch
}{\rtlch \ltrch\loch
INDE}
\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\rtlch \ltrch\loch

\par \pard\plain \s0\widctlpar\hyphpar0\dbch\af8\dbch\af11\afs24\cf0\kerning1\langfe2052\alang1081\loch\f3\fs20\lang1033\rtlch \ltrch\loch

\par }
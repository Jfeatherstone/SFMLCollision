<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_line" kind="class" language="C++" prot="public">
    <compoundname>Line</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_line_1a499bb2dc1195dccd6b8178013dec6baf" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Line::m_slope</definition>
        <argsstring></argsstring>
        <name>m_slope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="51" column="1" bodyfile="src/Line.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1a6d1106b3b6289223387fec68c91dec94" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Line::m_intercept</definition>
        <argsstring></argsstring>
        <name>m_intercept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="56" column="1" bodyfile="src/Line.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1affc6b0bffe4991c2362630a32fe3cb01" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float Line::m_angle</definition>
        <argsstring></argsstring>
        <name>m_angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="63" column="1" bodyfile="src/Line.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1a169a58250db92f6120f3c49a399cc5bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Line::m_vertical</definition>
        <argsstring></argsstring>
        <name>m_vertical</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="70" column="1" bodyfile="src/Line.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1a82c9270e65486f8d50be75582213cf53" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Line::m_horizontal</definition>
        <argsstring></argsstring>
        <name>m_horizontal</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="71" column="1" bodyfile="src/Line.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1a51de133e0d9bee4b8e61bb56498413b1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Line::m_quadrant</definition>
        <argsstring></argsstring>
        <name>m_quadrant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="75" column="1" bodyfile="src/Line.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1afff14445c4dc34a0da6a8857bbf4e77c" prot="private" static="no" mutable="no">
        <type>Vector2f</type>
        <definition>Vector2f Line::m_start</definition>
        <argsstring></argsstring>
        <name>m_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="80" column="1" bodyfile="src/Line.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1a5e85f8b59eb43416ba20e31c9b2013b1" prot="private" static="no" mutable="no">
        <type>Vector2f</type>
        <definition>Vector2f Line::m_end</definition>
        <argsstring></argsstring>
        <name>m_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="81" column="1" bodyfile="src/Line.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_line_1a5863ba4d0a16e8791fb10752336a35f8" prot="private" static="no" mutable="no">
        <type>Vector2f</type>
        <definition>Vector2f Line::m_offset</definition>
        <argsstring></argsstring>
        <name>m_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="83" column="1" bodyfile="src/Line.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_line_1a87c990ebbd0efec194d04a3ce8e9e85d" prot="private" static="yes" mutable="no">
        <type>float</type>
        <definition>float Line::VERTICAL_SLOPE</definition>
        <argsstring></argsstring>
        <name>VERTICAL_SLOPE</name>
        <initializer>= 100000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="72" column="1" bodyfile="src/Line.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_line_1af8ba5d7a6b96648647208ae85d147ef7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::calculateSlope</definition>
        <argsstring>(Vector2f p1, Vector2f p2)</argsstring>
        <name>calculateSlope</name>
        <param>
          <type>Vector2f</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>Vector2f</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="85" column="1" bodyfile="src/Line.cpp" bodystart="44" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a23929af5f108da62714bbdde6bc71906" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::calculateIntercept</definition>
        <argsstring>()</argsstring>
        <name>calculateIntercept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="86" column="1" bodyfile="src/Line.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a8c2c3f8f4bd6cf38117732b40b230f1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::calculateAngle</definition>
        <argsstring>()</argsstring>
        <name>calculateAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="87" column="1" bodyfile="src/Line.cpp" bodystart="98" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a572ac62632ccab120d4ea83800079092" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Line::calculateQuadrant</definition>
        <argsstring>()</argsstring>
        <name>calculateQuadrant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="88" column="1" bodyfile="src/Line.cpp" bodystart="72" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_line_1a14086366b8143477126e1e707c39c926" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Line::Line</definition>
        <argsstring>(Vector2f p1, Vector2f p2)</argsstring>
        <name>Line</name>
        <param>
          <type>Vector2f</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>Vector2f</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="101" column="1" bodyfile="src/Line.cpp" bodystart="16" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1acc11b8a429d8cdd63ba6803dff5602b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Line::Line</definition>
        <argsstring>()</argsstring>
        <name>Line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="102" column="1" bodyfile="src/Line.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a5d43019cccd837ec42290bea0e2ad17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::y</definition>
        <argsstring>(float x)</argsstring>
        <name>y</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="106" column="1" bodyfile="src/Line.cpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a34a6df58140aa191f8c4718ccd613aeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Line::intersects</definition>
        <argsstring>(Line line)</argsstring>
        <name>intersects</name>
        <param>
          <type><ref refid="class_line" kindref="compound">Line</ref></type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="107" column="1" bodyfile="src/Line.cpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a69d1d2dabe536f41bff826effa84ac6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Line::intersects</definition>
        <argsstring>(Line line, Vector2f &amp;intersectionPoint, bool extendLine=false)</argsstring>
        <name>intersects</name>
        <param>
          <type><ref refid="class_line" kindref="compound">Line</ref></type>
          <declname>line</declname>
        </param>
        <param>
          <type>Vector2f &amp;</type>
          <declname>intersectionPoint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extendLine</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="108" column="1" bodyfile="src/Line.cpp" bodystart="179" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1ace99d3c925c8b71cb967188c029879e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::getAngle</definition>
        <argsstring>()</argsstring>
        <name>getAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="113" column="1" bodyfile="src/Line.cpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a9ed298f661aa86dc50099ba2bbf035d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::getIntercept</definition>
        <argsstring>()</argsstring>
        <name>getIntercept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="114" column="1" bodyfile="src/Line.cpp" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a982898ab2cf3a5e4d7a18c7b6f985492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Line::getSlope</definition>
        <argsstring>()</argsstring>
        <name>getSlope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="115" column="1" bodyfile="src/Line.cpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a535f3ce12c85a6cccfc183967b082b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector2f</type>
        <definition>Vector2f Line::getStart</definition>
        <argsstring>()</argsstring>
        <name>getStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="116" column="1" bodyfile="src/Line.cpp" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a0cddf1496f2b5efd58ea1484631d0cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector2f</type>
        <definition>Vector2f Line::getEnd</definition>
        <argsstring>()</argsstring>
        <name>getEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="117" column="1" bodyfile="src/Line.cpp" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a9764252ce3d039cba826643eb87f74e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Vector2f</type>
        <definition>Vector2f Line::getPerpendicular</definition>
        <argsstring>()</argsstring>
        <name>getPerpendicular</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="122" column="1" bodyfile="src/Line.cpp" bodystart="306" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1afa01770fb4ff6266ae8454fbed9f1650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Line::offset</definition>
        <argsstring>(Vector2f offset)</argsstring>
        <name>offset</name>
        <param>
          <type>Vector2f</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="124" column="1" bodyfile="src/Line.cpp" bodystart="236" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a1bd25ca4caf671c99dbfa20c0aa32f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RectangleShape *</type>
        <definition>RectangleShape * Line::getDrawable</definition>
        <argsstring>(Color color=Color::Cyan)</argsstring>
        <name>getDrawable</name>
        <param>
          <type>Color</type>
          <declname>color</declname>
          <defval>Color::Cyan</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="126" column="1" bodyfile="src/Line.cpp" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_line_1a1f12eb00fab756fb01962e1307b369a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Line::rotate</definition>
        <argsstring>(Vector2f center, float angle)</argsstring>
        <name>rotate</name>
        <param>
          <type>Vector2f</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Line.hpp" line="128" column="1" bodyfile="src/Line.cpp" bodystart="298" bodyend="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/Line.hpp" line="44" column="1" bodyfile="src/Line.hpp" bodystart="44" bodyend="129"/>
    <listofallmembers>
      <member refid="class_line_1a8c2c3f8f4bd6cf38117732b40b230f1f" prot="private" virt="non-virtual"><scope>Line</scope><name>calculateAngle</name></member>
      <member refid="class_line_1a23929af5f108da62714bbdde6bc71906" prot="private" virt="non-virtual"><scope>Line</scope><name>calculateIntercept</name></member>
      <member refid="class_line_1a572ac62632ccab120d4ea83800079092" prot="private" virt="non-virtual"><scope>Line</scope><name>calculateQuadrant</name></member>
      <member refid="class_line_1af8ba5d7a6b96648647208ae85d147ef7" prot="private" virt="non-virtual"><scope>Line</scope><name>calculateSlope</name></member>
      <member refid="class_line_1ace99d3c925c8b71cb967188c029879e7" prot="public" virt="non-virtual"><scope>Line</scope><name>getAngle</name></member>
      <member refid="class_line_1a1bd25ca4caf671c99dbfa20c0aa32f27" prot="public" virt="non-virtual"><scope>Line</scope><name>getDrawable</name></member>
      <member refid="class_line_1a0cddf1496f2b5efd58ea1484631d0cbc" prot="public" virt="non-virtual"><scope>Line</scope><name>getEnd</name></member>
      <member refid="class_line_1a9ed298f661aa86dc50099ba2bbf035d2" prot="public" virt="non-virtual"><scope>Line</scope><name>getIntercept</name></member>
      <member refid="class_line_1a9764252ce3d039cba826643eb87f74e5" prot="public" virt="non-virtual"><scope>Line</scope><name>getPerpendicular</name></member>
      <member refid="class_line_1a982898ab2cf3a5e4d7a18c7b6f985492" prot="public" virt="non-virtual"><scope>Line</scope><name>getSlope</name></member>
      <member refid="class_line_1a535f3ce12c85a6cccfc183967b082b83" prot="public" virt="non-virtual"><scope>Line</scope><name>getStart</name></member>
      <member refid="class_line_1a34a6df58140aa191f8c4718ccd613aeb" prot="public" virt="non-virtual"><scope>Line</scope><name>intersects</name></member>
      <member refid="class_line_1a69d1d2dabe536f41bff826effa84ac6e" prot="public" virt="non-virtual"><scope>Line</scope><name>intersects</name></member>
      <member refid="class_line_1a14086366b8143477126e1e707c39c926" prot="public" virt="non-virtual"><scope>Line</scope><name>Line</name></member>
      <member refid="class_line_1acc11b8a429d8cdd63ba6803dff5602b3" prot="public" virt="non-virtual"><scope>Line</scope><name>Line</name></member>
      <member refid="class_line_1affc6b0bffe4991c2362630a32fe3cb01" prot="private" virt="non-virtual"><scope>Line</scope><name>m_angle</name></member>
      <member refid="class_line_1a5e85f8b59eb43416ba20e31c9b2013b1" prot="private" virt="non-virtual"><scope>Line</scope><name>m_end</name></member>
      <member refid="class_line_1a82c9270e65486f8d50be75582213cf53" prot="private" virt="non-virtual"><scope>Line</scope><name>m_horizontal</name></member>
      <member refid="class_line_1a6d1106b3b6289223387fec68c91dec94" prot="private" virt="non-virtual"><scope>Line</scope><name>m_intercept</name></member>
      <member refid="class_line_1a5863ba4d0a16e8791fb10752336a35f8" prot="private" virt="non-virtual"><scope>Line</scope><name>m_offset</name></member>
      <member refid="class_line_1a51de133e0d9bee4b8e61bb56498413b1" prot="private" virt="non-virtual"><scope>Line</scope><name>m_quadrant</name></member>
      <member refid="class_line_1a499bb2dc1195dccd6b8178013dec6baf" prot="private" virt="non-virtual"><scope>Line</scope><name>m_slope</name></member>
      <member refid="class_line_1afff14445c4dc34a0da6a8857bbf4e77c" prot="private" virt="non-virtual"><scope>Line</scope><name>m_start</name></member>
      <member refid="class_line_1a169a58250db92f6120f3c49a399cc5bf" prot="private" virt="non-virtual"><scope>Line</scope><name>m_vertical</name></member>
      <member refid="class_line_1afa01770fb4ff6266ae8454fbed9f1650" prot="public" virt="non-virtual"><scope>Line</scope><name>offset</name></member>
      <member refid="class_line_1a1f12eb00fab756fb01962e1307b369a8" prot="public" virt="non-virtual"><scope>Line</scope><name>rotate</name></member>
      <member refid="class_line_1a87c990ebbd0efec194d04a3ce8e9e85d" prot="private" virt="non-virtual"><scope>Line</scope><name>VERTICAL_SLOPE</name></member>
      <member refid="class_line_1a5d43019cccd837ec42290bea0e2ad17a" prot="public" virt="non-virtual"><scope>Line</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
